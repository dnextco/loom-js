"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var cards_contract_1 = require("./cards-contract");
var __1 = require("../../..");
exports.DEFAULT_GAS = '3141592';
exports.CHILD_BLOCK_INTERVAL = 1000;
exports.web3Endpoint = 'http://127.0.0.1:8545';
exports.eventsEndpoint = 'ws://127.0.0.1:8545';
exports.dappchainEndpoint = 'http://localhost:46658';
// TODO: these should be pulled out of a config file generated by a Truffle migration
exports.ADDRESSES = {
    validator_manager: '0xf5cad0db6415a71a5bc67403c87b56b629b4ddaa',
    root_chain: '0x9e51aeeeca736cd81d27e025465834b8ec08628a',
    token_contract: '0x1aa76056924bf4768d63357eca6d6a56ec929131',
    loom_token: '0x6804f48233f6ff2b468f7636560d525ca951931e'
};
// TODO: these should be pulled out of a config file generated by a Truffle migration
exports.ACCOUNTS = {
    authority: '0x7920ca01d3d1ac463dfd55b5ddfdcbb64ae31830f31be045ce2d51a305516a37',
    alice: '0xbb63b692f9d8f21f0b978b596dc2b8611899f053d68aec6c1c20d1df4f5b6ee2',
    bob: '0x2f615ea53711e0d91390e97cdd5ce97357e345e441aa95d255094164f44c8652',
    charlie: '0x7d52c3f6477e1507d54a826833169ad169a56e02ffc49a1801218a7d87ca50bd',
    dan: '0x6aecd44fcb79d4b68f1ee2b2c706f8e9a0cd06b0de4729fe98cfed8886315256',
    mallory: '0x686e245584fdf696abd739c0e66ac6e01fc4c68babee20c7124566e118b2a634',
    eve: '0x9fd4ab25e1699bb252f4d5c4510a135db34b3adca8baa03194ad5cd6faa13a1d',
    trudy: '0xe8445efa4e3349c3c74fd6689553f93b55aca723115fb777e1e6f4db2a0a82ca',
    fred: '0x56901d80abc6953d1dc01de2f077b75260f49a3304f665b57ed13514a7e2a2bc',
    greg: '0xedc63d0e14b29aaa26c7585e962f93abb59bd7d8b01b585e073dc03d052a000b',
    harry: '0x6b9e9cc46d205668eff6eaa0c4ec6375d475e8ebd821bc79cc4239571560df15'
};
exports.DAPPCHAIN_ACCOUNTS = {
    alice: 'iDAg84PiCWf4kAYzSnKtlu1rU///XpLqJUuimPEoV1Jp+GtLJa+yXdM/nZOZLcbm9CDAvnYMa/SKQeRNi/ciHA==',
    bob: '3eHnPMZ9J67MT90L5UbFbDm+WYtguxmtGaVeMsebP0h3oS6er8TwYNoFzk5bbXioeehI2Qg2FH0i25CFj6AALw==',
    charlie: 'DmYcg2tQreOUrljct8fI1IMp/eWxcR02W1O6tLFCgmMhjtTPv8N50ebTTLw0rFm0FsCGgOMHZQb/ZHN33YImtQ==',
    dan: '24cBLX65S7rutcByV3c7SWHySj7vtEmMxaS4djLsy7z+yxfUutefMTovCMn2s0OJSy9DgNEu1uJUTs2iEVW6lg==',
    mallory: 'buCpQHL5EHiK9XeogXTykYOpBCLsqba2orCz4CzZ04oQ52tSpIUaHWSKxHUgsVsobOCkE+cWLQKqSv6hoX18SQ==',
    eve: 'HwDk9DnZ3ALjSmH+K9JmYDZoaIFczVJL5rUfUAMhzL5cgZv8ipxXQsyhNG6FaqIrWKS6FahNsDxlFLlS3/PKGg==',
    trudy: 'OCaglZBla+uurtHH6PRVL5M8C1L/4F0OO1kNn2O8T8Ry0MW5xk5D8tZHmog5Z1yZ95i8iUyFoeVArgJZbie0oQ==',
    fred: '0TuAsWkzCj9l1vfcwz9PRVD59rMuBSE9i93ljb3GI73PLjIsZUOyEQv5Gv4sV+iu64QK0DTWA8D9gMCzf0Yo6w==',
    greg: 'acyxTNkaEQRGtxgwgy0tvRZ7zvz3XlNZY7JghanFhciMbDMH92QjVWdCvoh384FT0D80RP3+ewq4rOm7QRzuOg==',
    harry: 'r0mWIq9Dmgdfe++v9fquBd4fwNtNP/OoeNqtTpSN3g9+z0yK4T+QAWQsshjMCkCwTp8SYmRVDwaK5/FbDUys4Q=='
};
function sleep(ms) {
    return new Promise(function (resolve) { return setTimeout(resolve, ms); });
}
exports.sleep = sleep;
function getTestUrls() {
    return {
        wsWriteUrl: process.env.TEST_LOOM_DAPP_WS_WRITE_URL || 'ws://127.0.0.1:46658/websocket',
        wsReadUrl: process.env.TEST_LOOM_DAPP_WS_READ_URL || 'ws://127.0.0.1:46658/queryws',
        httpWriteUrl: process.env.TEST_LOOM_DAPP_HTTP_WRITE_URL || 'http://127.0.0.1:46658/rpc',
        httpReadUrl: process.env.TEST_LOOM_DAPP_HTTP_READ_URL || 'http://127.0.0.1:46658/query'
    };
}
exports.getTestUrls = getTestUrls;
// All the contracts are expected to have been deployed to Ganache when this function is called.
function setupContracts(web3) {
    var abi = require('./contracts/cards-abi.json');
    var cards = new cards_contract_1.EthCardsContract(new web3.eth.Contract(abi, exports.ADDRESSES.token_contract));
    return { cards: cards };
}
exports.setupContracts = setupContracts;
function disconnectAccounts(accounts) {
    accounts.alice.disconnect();
    accounts.bob.disconnect();
    accounts.charlie.disconnect();
    accounts.dan.disconnect();
    accounts.eve.disconnect();
    accounts.trudy.disconnect();
    accounts.mallory.disconnect();
    accounts.greg.disconnect();
    accounts.fred.disconnect();
    accounts.harry.disconnect();
}
exports.disconnectAccounts = disconnectAccounts;
function setupAccounts() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var alice, bob, charlie, dan, eve, trudy, mallory, greg, fred, harry;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.alice, exports.DAPPCHAIN_ACCOUNTS.alice, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'alice_db')];
                case 1:
                    alice = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.bob, exports.DAPPCHAIN_ACCOUNTS.bob, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'bob_db')];
                case 2:
                    bob = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.charlie, exports.DAPPCHAIN_ACCOUNTS.charlie, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'charlie_db')];
                case 3:
                    charlie = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.dan, exports.DAPPCHAIN_ACCOUNTS.dan, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'dan_db')];
                case 4:
                    dan = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.eve, exports.DAPPCHAIN_ACCOUNTS.eve, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'eve_db')];
                case 5:
                    eve = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.trudy, exports.DAPPCHAIN_ACCOUNTS.trudy, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'trudy_db')];
                case 6:
                    trudy = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.mallory, exports.DAPPCHAIN_ACCOUNTS.mallory, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'mallory_db')];
                case 7:
                    mallory = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.greg, exports.DAPPCHAIN_ACCOUNTS.greg, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'greg_db')];
                case 8:
                    greg = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.fred, exports.DAPPCHAIN_ACCOUNTS.fred, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'fred_db')];
                case 9:
                    fred = _a.sent();
                    return [4 /*yield*/, __1.PlasmaUser.createOfflineUser(exports.ACCOUNTS.harry, exports.DAPPCHAIN_ACCOUNTS.harry, exports.web3Endpoint, exports.ADDRESSES.root_chain, exports.dappchainEndpoint, exports.eventsEndpoint, 'harry_db')];
                case 10:
                    harry = _a.sent();
                    return [2 /*return*/, { alice: alice, bob: bob, charlie: charlie, dan: dan, eve: eve, mallory: mallory, trudy: trudy, greg: greg, fred: fred, harry: harry }];
            }
        });
    });
}
exports.setupAccounts = setupAccounts;
//# sourceMappingURL=config.js.map